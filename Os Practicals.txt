
1--------------------------------

echo "Enter Marks Of A:"
read m1
echo "Enter Marks of B:"
read m2
if [ $m1 -gt $m2 ]
then 
  echo "A is Greater Than B"
elif [ $m1 == $m2 ]
then 
  echo "A is Equal To B"
else
  echo "B is Greater Than A"
fi
___________________________________

2------------------------------------

-->Use any one method of this four.


echo "Enter A:"
read a
echo "Enter B:"
read b

echo "Sum:"
echo $(( $a + $b ))
sUm=`expr $a + $b`
echo $sUm
Sum=$((a+b))
echo $Sum
((sum=a+b))
echo $sum

echo "Sub:"
echo $(( $a - $b ))
Sub=$((a-b))
sUb=`expr $a - $b`
echo $sUb
echo $Sub
((sub=a-b))
echo $sub

echo "Multi:"
echo $(( $a * $b ))
mUlti=`expr $a * $b`
echo $mUlti
Multi=$((a*b))
echo $Multi
((multi=a*b))
echo $multi

echo "Div:"
echo $(( $a / $b ))
dIv=`expr $a / $b`
echo $dIv
Div=$((a/b))
echo $Div
((div=a/b))
echo $div

echo "Modulus:"
echo $(( $a % $b ))
mOd=`expr $a % $b`
echo $mOd
Mod=$((a%b))
echo $Mod
((mod=a%b))
echo $mod

-----Arithmetic Operations using CASE----------


echo "Enter A:"
read a
echo "Enter B:"
read b 

echo "----------MENU-----------"
echo "1.Addition"
echo "2.Subtraction"
echo "3.Multiplication"
echo "4.Division"
echo "5.Modulus"
echo "------------------------"
echo "Enter Your Choice:"
read choice

case $choice in
1)echo "Addition of A and B is:"
  echo $(( $a + $b ))
;;

2)echo "Subtraction of A and B is:"
  echo $(( $a - $b ))
;;

3)echo "Multiplication of A and B is:"
  echo $(( $a * $b ))
;;

4)echo "Division of A and B is:"
  echo $(( $a / $b ))
;;

5)echo "Modulus is:"
  echo $(( $a % $b ))
;;

*)
echo "Invalid Choice"
;;
esac
_______________________________________________


3---------------------------------------------

-->Student Marksheet using if..elif..else


echo "Enter Your Marks out of 100"
echo "Enter Marks of Subject-1:"
read m1
echo "Enter Marks Of Subject-2:"
read m2
echo "Enter Marks Of Subject-3:"
read m3

total=$((m1+m2+m3))
perc=$(((total*100)/300))
avg=$((total/3))
echo "Total Marks:$total"
echo "Percentage: $perc %"
echo "Average Marks: $avg"

if [ $m1 -ge 35 ] && [ $m2 -ge 35 ] && [ $m3 -ge 35 ]
then  
  echo "Result:Pass"
fi

if [ $avg -ge 80 ] && [ $avg -le 100 ]
then 
  echo "Result:distinction"
elif [ $avg -ge 61 ] && [ $avg -le 79 ]
then 
  echo "Result:First Class"
elif [ $avg -ge 35 ] && [ $avg -le 60 ]
then 
  echo "Result:Second class"
else
echo "Result:Fail"
fi

-->Student Marksheet using Nested If..else
echo "Enter Your Marks out of 100"
echo "Enter Marks of Subject-1:"
read m1
echo "Enter Marks Of Subject-2:"
read m2
echo "Enter Marks Of Subject-3:"
read m3

total=$((m1+m2+m3))
perc=$(((total*100)/300))
avg=$((total/3))
echo "Total Marks:$total"
echo "Percentage: $perc %"
echo "Average Marks: $avg"

if [ $m1 -ge 35 ] && [ $m2 -ge 35 ] && [ $m3 -ge 35 ]
then  
   if [ $avg -ge 80 ] && [ $avg -le 100 ]
    then 
    echo "Result:Pass;distinction"
  elif [ $avg -ge 61 ] && [ $avg -le 79 ]
    then 
    echo "Result:Pass;First Class"
  elif [ $avg -ge 35 ] && [ $avg -le 60 ]
    then 
    echo "Result:Pass;Second class"
  fi
else
  echo "Result:Fail"
fi


-------------------------------------------

->find factorial of given number(using while loop)

echo "Enter a number:"
read num
fact=1;
while [ $num -gt 0 ]
do
((fact=fact*num))
((num=num-1))
done
echo "Factorial of Number is $fact"


-->fibonacci series (using for loop)

echo "Enter Total Number of Elements:"
read n
n1=0
n2=1


echo "Fibonacci Series..."
echo "$n1"
echo "$n2"
for ((i=2;i<n;i++))
do
((n3=n2+n1))
echo "$n3"
((n1=n2))
((n2=n3))
done


-->Prime Number
echo "Enter A number:"
read num

i=2
counter=0

while [ $i -le `expr $num / 2` ]
do
if [ `expr $num % $i` -eq 0 ]
then
counter=1
fi
((i=i+1))
done

if [ $counter -eq 1 ]
then
echo "The $num is not prime number"
else
echo "The $num is prime number"
fi



->Print multiplication table of given number

echo "Enter a Number:"
read num

i=1;

while [ $i -le 10 ]
do
((result=num*i))
echo "$num * $i = $result"
((i=i+1))
done


-->find given number is odd or even

echo "Enter a Number:"
read num

if [ `expr $num % 2` -eq 0 ]
then
echo "Even Number"
else
echo "Odd Number"
fi

-->Display calendar of current month


echo "Enter Your Name:-"
read name
echo "Enter Your Enrollment No:-"
read e_no
echo "------Menu-----"
echo "1.Display calender of current month"
echo "2.Display today date and time"
echo "3.Display Your terminal number"
echo "Enter choice:"
read choice
case "$choice" in
1) echo "$(cal)"
;;
2) echo "$(date)"
;;
3) echo "$(tty)"
;;
esac


-->find given year is leap year or not
echo "Enter a Year:"
read year

if [ `expr $year % 4` -eq 0 ]
then
echo "Leap Year"
else
echo "Not Leap Year"
fi

-->b.	Display todayâ€™s date and time

echo "Enter Your Name:-"
read name
echo "Enter Your Enrollment No:-"
read e_no
echo "------Menu-----"
echo "1.Display calender of current month"
echo "2.Display today date and time"
echo "3.Display Your terminal number"
echo "Enter choice:"
read choice
case "$choice" in
1) echo "$(cal)"
;;
2) echo "$(date)"
;;
3) echo "$(tty)"
;;
esac

-->	Display your terminal number

echo "Enter Your Name:-"
read name
echo "Enter Your Enrollment No:-"
read e_no
echo "------Menu-----"
echo "1.Display calender of current month"
echo "2.Display today date and time"
echo "3.Display Your terminal number"
echo "Enter choice:"
read choice
case "$choice" in
1) echo "$(cal)"
;;
2) echo "$(date)"
;;
3) echo "$(tty)"
;;
esac

-->Write a shell script to validate the entered date.


echo "Enter Your Name:-"
read name
echo "Enter Your Enrollment No:-"
read e_no

dd=0
mm=0 
yy=0 
days=0 

echo -n "Enter day (dd) : "
read dd 
echo -n "Enter month (mm) :"
read mm
echo -n "Enter year (yyyy) :"
read yy 

if [ $mm -le 0 -o $mm -gt 12 ];
then 
   echo "$mm is invalid month."
   exit 1
fi

case "$mm" in
1) days=31;;
2) days=28;;
3) days=31;;
4) days=30;;
5) days=31;;
6) days=30;;
7) days=31;;
8) days=31;;
9) days=30;;
10) days=31;;
11) days=30;;
12) days=31;;
*) days=-1;;
esac

if [ $mm -eq 2 ];
then 
 if [ $((yy%4)) -ne 0 ] ; then 
    :
 elif [ $((yy%400)) -eq 0 ]; then
      
      days=29
 elif [ $((yy%100)) -eq 0 ]; then
      :
      else 
       
      days=29
     fi
fi


if [ $dd -le 0 -o $dd -gt $days ];
then 
    echo "$dd day is invalid"
    exit 3
fi
 
echo "$dd/$mm/$yy is a valid date "


-->i)	Program to sort given numbers in ascending order.

echo "Enter Your Name:-"
read name
echo "Enter Your Enrollment No:-"
read e_no
arr=(90 25 99 100 70)
echo "Array in original order"
echo ${arr[*]}
for ((i = 0; i<5; i++))
do
  for((j = 0; j<5-i-1; j++))
    do
     if [ ${arr[j]} -gt ${arr[$((j+1))]} ]
        then
            temp=${arr[j]}
            arr[$j]=${arr[$((j+1))]}  
            arr[$((j+1))]=$temp
        fi
    done
done
echo "Array in sorted order :"
echo ${arr[*]}


-->ii)	Program to sort given numbers in descending order.

echo "Enter Your Name:-"
read name
echo "Enter Your Enrollment No:-"
read e_no

arr=( 92 25 99 100 70)
echo "Array in original order"
echo ${arr[*]}
for ((i = 0; i<5; i++))
do
  for((j = 0; j<5-i-1; j++))
    do
     if [ ${arr[j]} -lt ${arr[$((j+1))]} ]
        then
            temp=${arr[j]}
            arr[$j]=${arr[$((j+1))]}  
            arr[$((j+1))]=$temp
        fi
    done
done
echo "Array in sorted order :"
echo ${arr[*]}

-->iii)	Program to find sum of digit

echo "Enter Your Name:-"
read name
echo "Enter Your Enrollment No:-"
read e_no

echo "Numbers in original order"
echo "enter a number"
read num
sum=0 
while [ $num -gt 0 ]
do 
mod=`expr $num % 10 `
sum=`expr $sum + $mod`
num=`expr $num / 10`
done 
echo $sum

-->to reverse the given string. 

echo "Enter Your Name:-"
read name
echo "Enter Your Enrollment No:-"
read e_no
str="Dev Pathak"
copy=${str}
len=${#copy}
for ((i=$len-1; i>=0; i-- ))
do rev="$rev${copy:$i:1}"
done
echo "str: $str, rev: $rev"

-->to check given string is palindrome or not.

echo "Enter Your Name:-"
read name
echo "Enter Your Enrollment No:-"
read e_no

echo "Input the string without space"
read str
for i in $(seq 0 ${#str}) ; do
        revstr=${str:$i:1}$revstr
done
echo "The given string is " $str
echo "Its reverse is " $revstr
if [ "$str" = "$revstr" ]; then
        echo "It is a palindrome."
else
        echo "It is not a palindrome."
fi
